{
	"info": {
		"_postman_id": "98d7efc8-23f8-44e3-a7bd-e5d173c34265",
		"name": "LibraryCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27619298"
	},
	"item": [
		{
			"name": "Initialization",
			"item": [
				{
					"name": "AuthorsInitialization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"givenName\": \"Weppa\",\n        \"familyName\": \"Palla\",\n        \"birthDate\": \"1971-01-01\"\n    },\n    {\n        \"givenName\": \"Weppe\",\n        \"familyName\": \"Palla\",\n        \"birthDate\": \"1972-02-02\"\n    },\n    {\n        \"givenName\": \"Weppi\",\n        \"familyName\": \"Palla\",\n        \"birthDate\": \"1973-03-03\"\n    },\n    {\n        \"givenName\": \"Weppo\",\n        \"familyName\": \"Palla\",\n        \"birthDate\": \"1974-04-04\"\n    },\n    {\n        \"givenName\": \"Weppu\",\n        \"familyName\": \"Palla\",\n        \"birthDate\": \"1975-05-05\"\n    },\n    {\n        \"givenName\": \"Xorra\",\n        \"familyName\": \"Varra\",\n        \"birthDate\": \"1976-06-06\"\n    },\n    {\n        \"givenName\": \"Xorre\",\n        \"familyName\": \"Varra\",\n        \"birthDate\": \"1977-07-07\"\n    },\n    {\n        \"givenName\": \"Xorri\",\n        \"familyName\": \"Varra\",\n        \"birthDate\": \"1978-08-08\"\n    },\n    {\n        \"givenName\": \"Xorro\",\n        \"familyName\": \"Varra\",\n        \"birthDate\": \"1979-09-09\"\n    },\n    {\n        \"givenName\": \"Xorru\",\n        \"familyName\": \"Varra\",\n        \"birthDate\": \"1980-10-10\"\n    },\n    {\n        \"givenName\": \"Anonimo\",\n        \"familyName\": \"Qualunquello\",\n        \"birthDate\": \"1998-04-26\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Author/PostMulti",
							"host": [
								"{{base}}"
							],
							"path": [
								"Author",
								"PostMulti"
							]
						}
					},
					"response": []
				},
				{
					"name": "BooksInitialization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida la struttura del JSON\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"title\": \"Book1\",\n        \"publicationDate\": \"1991-01-01\",\n        \"authorId\": 1,\n        \"isbn\": \"ISBN13-978-0-306-40615-7\"\n    },\n    {\n        \"title\": \"BlueBook1\",\n        \"publicationDate\": \"2001-01-01\",\n        \"authorId\": 1,\n        \"isbn\": \"ISBN13-978-1-84356-028-4\"\n    },\n    {\n        \"title\": \"GreenBook1\",\n        \"publicationDate\": \"2011-01-01\",\n        \"authorId\": 1,\n        \"isbn\": \"ISBN13-978-0-9767736-6-0\"\n    },\n    {\n        \"title\": \"RedBook1\",\n        \"publicationDate\": \"2021-01-01\",\n        \"authorId\": 1,\n        \"isbn\": \"ISBN13-978-0-13-235088-4\"\n    },\n    {\n        \"title\": \"Book2\",\n        \"publicationDate\": \"1992-02-02\",\n        \"authorId\": 2,\n        \"isbn\": \"ISBN13-978-0-201-53082-1\"\n    },\n    {\n        \"title\": \"BlueBook2\",\n        \"publicationDate\": \"2002-02-02\",\n        \"authorId\": 2,\n        \"isbn\": \"ISBN13-978-0-7356-4877-1\"\n    },\n    {\n        \"title\": \"Book3\",\n        \"publicationDate\": \"1993-03-03\",\n        \"authorId\": 3,\n        \"isbn\": \"ISBN13-978-0-596-52068-7\"\n    },\n    {\n        \"title\": \"BlueBook3\",\n        \"publicationDate\": \"2003-03-03\",\n        \"authorId\": 3,\n        \"isbn\": \"ISBN13-978-0-07-352332-3\"\n    },\n    {\n        \"title\": \"Book4\",\n        \"publicationDate\": \"1994-04-04\",\n        \"authorId\": 4,\n        \"isbn\": \"ISBN13-978-0-321-97205-9\"\n    },\n    {\n        \"title\": \"BlueBook4\",\n        \"publicationDate\": \"2004-04-04\",\n        \"authorId\": 4,\n        \"isbn\": \"ISBN13-978-0-13-277289-0\"\n    },\n    {\n        \"title\": \"Book5\",\n        \"publicationDate\": \"1995-05-05\",\n        \"authorId\": 5,\n        \"isbn\": \"ISBN13-978-0-671-02735-3\"\n    },\n    {\n        \"title\": \"BlueBook5\",\n        \"publicationDate\": \"2005-05-05\",\n        \"authorId\": 5,\n        \"isbn\": \"ISBN13-978-0-345-35388-9\"\n    },\n    {\n        \"title\": \"Book6\",\n        \"publicationDate\": \"1996-06-06\",\n        \"authorId\": 6,\n        \"isbn\": \"ISBN13-978-0-14-044924-2\"\n    },\n    {\n        \"title\": \"BlueBook6\",\n        \"publicationDate\": \"2006-06-06\",\n        \"authorId\": 6,\n        \"isbn\": \"ISBN13-978-0-8044-2957-6\"\n    },\n    {\n        \"title\": \"Book7\",\n        \"publicationDate\": \"1997-07-07\",\n        \"authorId\": 7,\n        \"isbn\": \"ISBN13-978-0-06-112241-5\"\n    },\n    {\n        \"title\": \"BlueBook7\",\n        \"publicationDate\": \"2007-07-07\",\n        \"authorId\": 7,\n        \"isbn\": \"ISBN13-978-0-451-17174-7\"\n    },\n    {\n        \"title\": \"Book8\",\n        \"publicationDate\": \"1998-08-08\",\n        \"authorId\": 8,\n        \"isbn\": \"ISBN13-978-0-385-50420-8\"\n    },\n    {\n        \"title\": \"BlueBook8\",\n        \"publicationDate\": \"2008-08-08\",\n        \"authorId\": 8,\n        \"isbn\": \"ISBN13-978-0-399-53536-5\"\n    },\n    {\n        \"title\": \"Book9\",\n        \"publicationDate\": \"1999-09-09\",\n        \"authorId\": 9,\n        \"isbn\": \"ISBN13-978-0-553-38108-2\"\n    },\n    {\n        \"title\": \"BlueBook9\",\n        \"publicationDate\": \"2009-09-09\",\n        \"authorId\": 9,\n        \"isbn\": \"ISBN13-978-0-312-14494-8\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Book/PostMulti",
							"host": [
								"{{base}}"
							],
							"path": [
								"Book",
								"PostMulti"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Author",
			"item": [
				{
					"name": "GetAllAuthors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida lo status code 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Valida la struttura del body 1\", function () {",
									"    var contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.expect(contentType).to.include(\"application/json\");",
									"    var responseBody = pm.response.json();",
									"    pm.expect(responseBody).to.be.an('array');",
									"    ",
									"    responseBody.forEach(function (item) {",
									"        pm.expect(item).to.be.an('object');",
									"        pm.expect(item).to.have.keys('givenName', 'familyName', 'birthDate');",
									"        pm.expect(item).to.have.property('givenName').that.is.a('string');",
									"        pm.expect(item).to.have.property('familyName').that.is.a('string');",
									"        pm.expect(item).to.have.property('birthDate').to.satisfy(function (value) {",
									"            return typeof value === 'string' || value === null;",
									"        });",
									"    });",
									"});",
									"",
									"pm.test(\"Valida la struttura del body 2\", function () {",
									"    var contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.expect(contentType).to.include(\"application/json\");",
									"    var responseBody = pm.response.json();",
									"    pm.expect(responseBody).to.be.an('array');",
									"",
									"    responseBody.forEach(function (item) {",
									"        pm.expect(item).to.be.an('object');",
									"        pm.expect(item.givenName).to.exist;",
									"        pm.expect(typeof item.givenName).to.equal('string');",
									"        pm.expect(item.familyName).to.exist;",
									"        pm.expect(typeof item.familyName).to.equal('string');",
									"        // pm.expect(item.birthDate).to.exist;",
									"        pm.expect(item.birthDate).to.satisfy(function (value) {",
									"            return typeof value === 'string' || value === null;",
									"        });",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Author/GetAllAuthors",
							"host": [
								"{{base}}"
							],
							"path": [
								"Author",
								"GetAllAuthors"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida lo status code 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Valida la struttura del body 1\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.keys('givenName', 'familyName', 'birthDate');",
									"    pm.expect(jsonData).to.have.property('givenName').that.is.a('string');",
									"    pm.expect(jsonData).to.have.property('familyName').that.is.a('string');",
									"    pm.expect(jsonData).to.have.property('birthDate').to.satisfy(function (value) {",
									"        return typeof value === 'string' || value === null;",
									"    });",
									"});",
									"",
									"pm.test(\"Valida la struttura del body 2\", function () {",
									"    var contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.expect(contentType).to.include(\"application/json\");  ",
									"    var responseBody = pm.response.json(); ",
									"    pm.expect(responseBody).to.be.an('object'); ",
									"    pm.expect(responseBody.givenName).to.exist; ",
									"    pm.expect(typeof responseBody.givenName).to.equal('string'); ",
									"    pm.expect(responseBody.familyName).to.exist;  ",
									"    pm.expect(typeof responseBody.familyName).to.equal('string');",
									"    // pm.expect(item.birthDate).to.exist;",
									"    pm.expect(responseBody.birthDate).to.satisfy(function (value) {",
									"        return typeof value === 'string' || value === null;",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Author/GetById/1",
							"host": [
								"{{base}}"
							],
							"path": [
								"Author",
								"GetById",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostOne",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida body di risposta\", function () {",
									"    try {",
									"        var responseBody = pm.response.json();",
									"        var numericValue = parseFloat(responseBody);",
									"        pm.expect(isNaN(numericValue)).to.be.false;",
									"    } catch (error) {",
									"        pm.assert.fail(\"corpo di risposta non è JSON valido\");",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"givenName\": \"Anonimino\",\n    \"familyName\": \"Qualunquello\",\n    \"birthDate\": \"2000-02-22\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Author/PostOne",
							"host": [
								"{{base}}"
							],
							"path": [
								"Author",
								"PostOne"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida lo status code 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Valida body di risposta\", function () {",
									"    try {",
									"        var responseBody = pm.response.json();",
									"        var numericValue = parseFloat(responseBody);",
									"        pm.expect(isNaN(numericValue)).to.be.false;",
									"    } catch (error) {",
									"        pm.assert.fail(\"corpo di risposta non è JSON valido\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"givenName\": \"Sway\",\n  \"familyName\": \"Sway\",\n  \"birthDate\": \"2006-02-06\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Author/PutById/10",
							"host": [
								"{{base}}"
							],
							"path": [
								"Author",
								"PutById",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAuthorsById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida lo status code 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Author/DeleteAuthorById/10",
							"host": [
								"{{base}}"
							],
							"path": [
								"Author",
								"DeleteAuthorById",
								"10"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Book",
			"item": [
				{
					"name": "GetByPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida lo status code\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Valida la struttura del body\", function () {",
									"    var contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.expect(contentType).to.include(\"application/json\");",
									"    var responseBody = pm.response.json();",
									"    pm.expect(responseBody).to.be.an('array');",
									"    ",
									"    responseBody.forEach(function (item) {",
									"        pm.expect(item).to.be.an('object');",
									"        pm.expect(item).to.have.keys('isbn', 'authorFullName', 'title', 'publicationDate');",
									"        pm.expect(item).to.have.property('isbn').that.is.a('string');",
									"        pm.expect(item).to.have.property('authorFullName').that.is.a('string');",
									"        pm.expect(item).to.have.property('title').that.is.a('string');",
									"        pm.expect(item).to.have.property('publicationDate').to.satisfy(function (value) {",
									"            return typeof value === 'string' || value === null;",
									"        });",
									"    });",
									"});",
									"",
									"pm.test(\"Valida la struttura del body\", function () {",
									"    var contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.expect(contentType).to.include(\"application/json\");",
									"    var responseBody = pm.response.json();",
									"    pm.expect(responseBody).to.be.an('array');",
									"",
									"    responseBody.forEach(function (item) {",
									"        pm.expect(item).to.be.an('object');",
									"        pm.expect(item.isbn).to.exist;",
									"        pm.expect(typeof item.isbn).to.equal('string');",
									"        pm.expect(item.authorFullName).to.exist;",
									"        pm.expect(typeof item.authorFullName).to.equal('string');",
									"        pm.expect(item.title).to.exist;",
									"        pm.expect(typeof item.title).to.equal('string');",
									"        // pm.expect(item.publicationDate).to.exist;",
									"        pm.expect(item.publicationDate).to.satisfy(function (value) {",
									"            return typeof value === 'string' || value === null;",
									"        });",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Book/GetByPage/4/1",
							"host": [
								"{{base}}"
							],
							"path": [
								"Book",
								"GetByPage",
								"4",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetByISBN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida lo status code\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Valida la struttura del JSON 1\", function () {",
									"    var contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.expect(contentType).to.include(\"application/json\");",
									"    var responseBody = pm.response.json();",
									"    pm.expect(responseBody).to.be.an('object');",
									"    ",
									"    pm.expect(responseBody).to.be.an('object');",
									"    pm.expect(responseBody).to.have.property('isbn').that.is.a('string');",
									"    pm.expect(responseBody).to.have.property('authorFullName').that.is.a('string');",
									"    pm.expect(responseBody).to.have.property('title').that.is.a('string');",
									"    pm.expect(responseBody).to.have.property('publicationDate').to.satisfy(function (value) {",
									"        return typeof value === 'string' || value === null;",
									"    });",
									"});",
									"",
									"pm.test(\"Valida la struttura del body\", function () {",
									"    var contentType = pm.response.headers.get(\"Content-Type\");",
									"    pm.expect(contentType).to.include(\"application/json\");",
									"    var responseBody = pm.response.json();",
									"    pm.expect(responseBody).to.be.an('object');",
									"    pm.expect(responseBody.isbn).to.exist;",
									"    pm.expect(typeof responseBody.isbn).to.equal('string');",
									"    pm.expect(responseBody.authorFullName).to.exist;",
									"    pm.expect(typeof responseBody.authorFullName).to.equal('string');",
									"    pm.expect(responseBody.title).to.exist;",
									"    pm.expect(typeof responseBody.title).to.equal('string');",
									"    // pm.expect(responseBody.publicationDate).to.exist;",
									"    pm.expect(responseBody.publicationDate).to.satisfy(function (value) {",
									"        return typeof value === 'string' || value === null;",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/Book/GetByISBN/ISBN13-978-0-306-40615-7",
							"host": [
								"{{base}}"
							],
							"path": [
								"Book",
								"GetByISBN",
								"ISBN13-978-0-306-40615-7"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostMulti",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida lo status code 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Valida body di risposta\", function () {",
									"    try {",
									"        var responseBody = pm.response.json();",
									"        var numericValue = parseFloat(responseBody);",
									"        pm.expect(isNaN(numericValue)).to.be.false;",
									"    } catch (error) {",
									"        pm.assert.fail(\"corpo di risposta non è JSON valido\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"title\": \"GreenBook2\",\n        \"publicationDate\": \"2012-02-02\",\n        \"authorId\": 2,\n        \"isbn\": \"ISBN13-978-0-7499-8133-4\"\n    },\n    {\n        \"title\": \"GreenBook3\",\n        \"publicationDate\": \"2013-03-03\",\n        \"authorId\": 3,\n        \"isbn\": \"ISBN13-978-0-451-46800-9\"\n    },\n    {\n        \"title\": \"GreenBook4\",\n        \"publicationDate\": \"2014-04-04\",\n        \"authorId\": 4,\n        \"isbn\": \"ISBN13-978-0-571-22063-9\"\n    },\n    {\n        \"title\": \"GreenBook5\",\n        \"publicationDate\": \"2015-05-05\",\n        \"authorId\": 5,\n        \"isbn\": \"ISBN13-978-0-316-27277-4\"\n    },\n    {\n        \"title\": \"GreenBook6\",\n        \"publicationDate\": \"2016-06-06\",\n        \"authorId\": 6,\n         \"isbn\": \"ISBN13-978-0-525-95414-9\"\n    },\n    {\n        \"title\": \"GreenBook7\",\n        \"publicationDate\": \"2017-07-07\",\n            \"authorId\": 7,\n        \"isbn\": \"ISBN13-978-0-14-311001-4\"\n    },\n    {\n        \"title\": \"GreenBook7\",\n        \"publicationDate\": \"2018-08-08\",\n         \"authorId\": 8,\n         \"isbn\": \"ISBN13-978-0-373-20092-5\"\n    },\n    {\n        \"title\": \"GreenBook7\",\n        \"publicationDate\": \"2019-09-09\",\n        \"authorId\": 9,\n        \"isbn\": \"ISBN13-978-0-517-88431-7\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Book/PostMulti",
							"host": [
								"{{base}}"
							],
							"path": [
								"Book",
								"PostMulti"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutByISBN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code 200.\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida lo status code 400.\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Valida body di risposta.\", function () {",
									"    try {",
									"        var responseBody = pm.response.text();",
									"        pm.expect(responseBody).to.be.a('string');",
									"    } catch (error) {",
									"        pm.assert.fail(\"Corpo di risposta non è una stringa valida.\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Good Job\",\n    \"authorId\": 4,\n    \"publicationYear\": \"2022-01-22\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Book/PutByISBN/ISBN13-978-0-306-40615-7",
							"host": [
								"{{base}}"
							],
							"path": [
								"Book",
								"PutByISBN",
								"ISBN13-978-0-306-40615-7"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteByISBN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valida lo status code 200.\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Valida lo status code 400.\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/Book/DeleteByISBN/ISBN13-978-0-306-40615-7",
							"host": [
								"{{base}}"
							],
							"path": [
								"Book",
								"DeleteByISBN",
								"ISBN13-978-0-306-40615-7"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}